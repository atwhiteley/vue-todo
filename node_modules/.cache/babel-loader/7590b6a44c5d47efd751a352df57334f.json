{"remainingRequest":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/babel-loader/lib/index.js!/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/vuetify/lib/components/VSparkline/helpers/core.js","dependencies":[{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/vuetify/lib/components/VSparkline/helpers/core.js","mtime":499162500000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYW5kcmVhc3RlaWdsYW5kd2hpdGVsZXkvUmVwby9jb2RlL3RvZG8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKZXhwb3J0IGZ1bmN0aW9uIGdlblBvaW50cyh2YWx1ZXMsIGJvdW5kYXJ5KSB7CiAgdmFyIG1pblggPSBib3VuZGFyeS5taW5YLAogICAgICBtYXhYID0gYm91bmRhcnkubWF4WCwKICAgICAgbWluWSA9IGJvdW5kYXJ5Lm1pblksCiAgICAgIG1heFkgPSBib3VuZGFyeS5tYXhZOwogIHZhciB0b3RhbFZhbHVlcyA9IHZhbHVlcy5sZW5ndGg7CiAgdmFyIG1heFZhbHVlID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KHZhbHVlcykpOwogIHZhciBtaW5WYWx1ZSA9IE1hdGgubWluLmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh2YWx1ZXMpKTsKICB2YXIgZ3JpZFggPSAobWF4WCAtIG1pblgpIC8gKHRvdGFsVmFsdWVzIC0gMSk7CiAgdmFyIGdyaWRZID0gKG1heFkgLSBtaW5ZKSAvIChtYXhWYWx1ZSAtIG1pblZhbHVlIHx8IDEpOwogIHJldHVybiB2YWx1ZXMubWFwKGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgpIHsKICAgIHJldHVybiB7CiAgICAgIHg6IG1pblggKyBpbmRleCAqIGdyaWRYLAogICAgICB5OiBtYXhZIC0gKHZhbHVlIC0gbWluVmFsdWUpICogZ3JpZFkgKyArKGluZGV4ID09PSB0b3RhbFZhbHVlcyAtIDEpICogMC4wMDAwMSAtICsoaW5kZXggPT09IDApICogMC4wMDAwMSwKICAgICAgdmFsdWU6IHZhbHVlCiAgICB9OwogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBnZW5CYXJzKHZhbHVlcywgYm91bmRhcnkpIHsKICB2YXIgbWluWCA9IGJvdW5kYXJ5Lm1pblgsCiAgICAgIG1heFggPSBib3VuZGFyeS5tYXhYLAogICAgICBtaW5ZID0gYm91bmRhcnkubWluWSwKICAgICAgbWF4WSA9IGJvdW5kYXJ5Lm1heFk7CiAgdmFyIHRvdGFsVmFsdWVzID0gdmFsdWVzLmxlbmd0aDsKICB2YXIgbWF4VmFsdWUgPSBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkodmFsdWVzKSk7CiAgdmFyIG1pblZhbHVlID0gTWF0aC5taW4uYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KHZhbHVlcykpOwogIGlmIChtaW5WYWx1ZSA+IDApIG1pblZhbHVlID0gMDsKICBpZiAobWF4VmFsdWUgPCAwKSBtYXhWYWx1ZSA9IDA7CiAgdmFyIGdyaWRYID0gbWF4WCAvIHRvdGFsVmFsdWVzOwogIHZhciBncmlkWSA9IChtYXhZIC0gbWluWSkgLyAobWF4VmFsdWUgLSBtaW5WYWx1ZSk7CiAgdmFyIGhvcml6b25ZID0gbWF4WSAtIE1hdGguYWJzKG1pblZhbHVlICogZ3JpZFkpOwogIHJldHVybiB2YWx1ZXMubWFwKGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgpIHsKICAgIHZhciBoZWlnaHQgPSBNYXRoLmFicyhncmlkWSAqIHZhbHVlKTsKICAgIHJldHVybiB7CiAgICAgIHg6IG1pblggKyBpbmRleCAqIGdyaWRYLAogICAgICB5OiBob3Jpem9uWSAtIGhlaWdodCArICsodmFsdWUgPCAwKSAqIGhlaWdodCwKICAgICAgaGVpZ2h0OiBoZWlnaHQsCiAgICAgIHZhbHVlOiB2YWx1ZQogICAgfTsKICB9KTsKfQ=="},{"version":3,"sources":["../../../../src/components/VSparkline/helpers/core.ts"],"names":[],"mappings":";;AAEA,OAAM,SAAA,SAAA,CAAA,MAAA,EAAA,QAAA,EAEc;AAAA,MAEZ,IAFY,GAElB,QAFkB,CAEZ,IAFY;AAAA,MAEZ,IAFY,GAElB,QAFkB,CAEZ,IAFY;AAAA,MAEZ,IAFY,GAElB,QAFkB,CAEZ,IAFY;AAAA,MAEQ,IAFR,GAElB,QAFkB,CAEQ,IAFR;AAGlB,MAAM,WAAW,GAAG,MAAM,CAA1B,MAAA;AACA,MAAM,QAAQ,GAAG,IAAI,CAAJ,GAAA,OAAA,IAAI,qBAArB,MAAqB,EAArB;AACA,MAAM,QAAQ,GAAG,IAAI,CAAJ,GAAA,OAAA,IAAI,qBAArB,MAAqB,EAArB;AAEA,MAAM,KAAK,GAAG,CAAC,IAAI,GAAL,IAAA,KAAiB,WAAW,GAA1C,CAAc,CAAd;AACA,MAAM,KAAK,GAAG,CAAC,IAAI,GAAL,IAAA,KAAkB,QAAQ,GAAT,QAAC,IAAhC,CAAc,CAAd;AAEA,SAAO,MAAM,CAAN,GAAA,CAAW,UAAA,KAAA,EAAA,KAAA,EAAiB;AACjC,WAAO;AACL,MAAA,CAAC,EAAE,IAAI,GAAG,KAAK,GADV,KAAA;AAEL,MAAA,CAAC,EACC,IAAI,GACJ,CAAC,KAAK,GAAN,QAAA,IADA,KAAA,GAEA,EAAE,KAAK,KAAK,WAAW,GAAvB,CAAA,IAFA,OAAA,GAGA,EAAE,KAAK,KAAP,CAAA,IANG,OAAA;AAOL,MAAA,KAAA,EAAA;AAPK,KAAP;AADF,GAAO,CAAP;AAWD;AAED,OAAM,SAAA,OAAA,CAAA,MAAA,EAAA,QAAA,EAEc;AAAA,MAEZ,IAFY,GAElB,QAFkB,CAEZ,IAFY;AAAA,MAEZ,IAFY,GAElB,QAFkB,CAEZ,IAFY;AAAA,MAEZ,IAFY,GAElB,QAFkB,CAEZ,IAFY;AAAA,MAEQ,IAFR,GAElB,QAFkB,CAEQ,IAFR;AAGlB,MAAM,WAAW,GAAG,MAAM,CAA1B,MAAA;AACA,MAAI,QAAQ,GAAG,IAAI,CAAJ,GAAA,OAAA,IAAI,qBAAnB,MAAmB,EAAnB;AACA,MAAI,QAAQ,GAAG,IAAI,CAAJ,GAAA,OAAA,IAAI,qBAAnB,MAAmB,EAAnB;AAEA,MAAI,QAAQ,GAAZ,CAAA,EAAkB,QAAQ,GAAR,CAAA;AAClB,MAAI,QAAQ,GAAZ,CAAA,EAAkB,QAAQ,GAAR,CAAA;AAElB,MAAM,KAAK,GAAG,IAAI,GAAlB,WAAA;AACA,MAAM,KAAK,GAAG,CAAC,IAAI,GAAL,IAAA,KAAiB,QAAQ,GAAvC,QAAc,CAAd;AACA,MAAM,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAJ,GAAA,CAAS,QAAQ,GAAzC,KAAwB,CAAxB;AAEA,SAAO,MAAM,CAAN,GAAA,CAAW,UAAA,KAAA,EAAA,KAAA,EAAiB;AACjC,QAAM,MAAM,GAAG,IAAI,CAAJ,GAAA,CAAS,KAAK,GAA7B,KAAe,CAAf;AAEA,WAAO;AACL,MAAA,CAAC,EAAE,IAAI,GAAG,KAAK,GADV,KAAA;AAEL,MAAA,CAAC,EAAE,QAAQ,GAAR,MAAA,GACD,EAAE,KAAK,GAAP,CAAA,IAHG,MAAA;AAIL,MAAA,MAJK,EAIL,MAJK;AAKL,MAAA,KAAA,EAAA;AALK,KAAP;AAHF,GAAO,CAAP;AAWD","sourcesContent":["import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === totalValues - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / (maxValue - minValue)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n"],"sourceRoot":""}]}