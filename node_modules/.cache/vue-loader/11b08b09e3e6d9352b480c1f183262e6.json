{"remainingRequest":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreasteiglandwhiteley/Repo/code/todo/src/components/TodoList.vue?vue&type=style&index=0&id=3de47834&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/src/components/TodoList.vue","mtime":1580973317021},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreasteiglandwhiteley/Repo/code/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKPj4+IC52LXRleHQtZmllbGQgCiAgY29sb3I6IHdoaXRlIAouaW5kaWNhdG9yIAogIHdpZHRoOiAyMHB4CiAgaGVpZ2h0OiAyMHB4IAogIHBvc2l0aW9uOiByZWxhdGl2ZSAKICB0b3A6IDRweAo="},{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container class=\"todo-list\">\n    <v-row>\n      <v-col>\n        <span>{{ statusMessage }}</span>\n      </v-col>\n    </v-row>\n    <v-row align=\"baseline\">\n      <v-col>\n        <v-text-field @keydown.enter=\"addTodo\" v-model=\"newTodo\" />\n      </v-col>\n      <v-col cols=\"auto\">\n        <v-menu open-on-hover offsetY :close-on-click=\"false\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn :color=\"color\" v-on=\"on\">Color</v-btn>\n          </template>\n          <v-color-picker v-model=\"color\"></v-color-picker>\n        </v-menu>\n      </v-col>\n      <v-col cols=\"auto\">\n        <v-btn @click=\"addTodo\">Add</v-btn>\n      </v-col>\n    </v-row>\n    <v-row align=\"baseline\" dense v-for=\"(todo, index) in myTodos\" :key=\"index\">\n      <v-col cols=\"auto\">\n        <div class=\"indicator\" :style=\"{ backgroundColor: todo.color}\"></div>\n      </v-col>\n      <v-col>\n        <v-checkbox :color=\"todo.color\" hide-details :label=\"todo.text\" \n          @change=\"toggleCompleted(index)\" :input-value=\"todo.completed\" />\n      </v-col>\n      <v-col cols=\"auto\">\n        <v-btn small @click=\"removeTodo(index)\">Remove</v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<style lang=\"stylus\" scoped>\n  >>> .v-text-field \n    color: white \n  .indicator \n    width: 20px\n    height: 20px \n    position: relative \n    top: 4px\n</style>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport { Component, Watch, Prop } from 'vue-property-decorator'\nimport { Todo } from '@/model/todo-model'\n\n@Component\nexport default class TodoList extends Vue {\n  @Prop() myTodos!: Todo[];\n  \n  private newTodo = '';\n  private color = '';\n\n  @Watch('myTodos', { deep : true})\n  onChange() {\n    this.$store.dispatch('save');\n  }\n\n  addTodo() {\n    if (this.newTodo.length > 0) {\n      this.$store.commit('addTodo', {\n        text: this.newTodo,\n        completed: false,\n        color: this.color\n      });\n    }\n  }\n\n  toggleCompleted(index: number) {\n    this.$store.commit('toggleCompleted', index);\n  }\n\n  removeTodo(index: number) {\n    this.$store.commit('removeTodo', index);\n  }\n\n  get statusMessage() {\n    const length = this.uncompletedTodos.length;\n    if (length > 0) {\n      return `You have ${length} stuff${length > 1 ? 's':''} to do.`;\n    }\n    return 'You have completed everything you champ!'\n  }\n\n  get uncompletedTodos() {\n    return this.$store.getters.uncompletedTodos as Todo[];\n  }\n}\n</script>\n"]}]}